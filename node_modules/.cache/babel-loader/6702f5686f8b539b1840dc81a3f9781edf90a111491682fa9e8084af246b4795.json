{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDq4tJ7-2xzM_QTcr5uj61kVo720aF-Bn4\",\n  authDomain: \"crwn-clothing-db-da061.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-da061\",\n  storageBucket: \"crwn-clothing-db-da061.appspot.com\",\n  messagingSenderId: \"631154021242\",\n  appId: \"1:631154021242:web:bcdd99f59ec0f3e9e3fcc3\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnaps));\n};\nexport const createUserDocumentFromAuth = async userAuth => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => signOut(auth);\nexport const onAuthStateChangedListener = (callBack, errorCallback, completedCallback) => onAuthStateChanged(auth, callBack, errorCallback, completedCallback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnaps","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callBack","errorCallback","completedCallback"],"sources":["/Users/jedeo/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs\n} from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDq4tJ7-2xzM_QTcr5uj61kVo720aF-Bn4\",\n  authDomain: \"crwn-clothing-db-da061.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-da061\",\n  storageBucket: \"crwn-clothing-db-da061.appspot.com\",\n  messagingSenderId: \"631154021242\",\n  appId: \"1:631154021242:web:bcdd99f59ec0f3e9e3fcc3\",\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log(\"done\");\n};\n\nexport const getCategoriesAndDocuments = async() => {\n\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnaps))\n}\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => signOut(auth);\n\nexport const onAuthStateChangedListener = (\n  callBack,\n  errorCallback,\n  completedCallback\n) => onAuthStateChanged(auth, callBack, errorCallback, completedCallback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}